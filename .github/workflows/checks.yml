name: Pre-merge checks
on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
  push:
    branches:
      - main

jobs:
  resolve-test-versions:
    runs-on: ubuntu-latest
    outputs:
      playwright-version: ${{ steps['resolve-playwright-version'].outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Resolve Playwright version
        id: resolve-playwright-version
        run: |
          version="$(yq -r '.devDependencies["@playwright/test"] // .dependencies["@playwright/test"] // ""' package.json)"
          test -n "$version" || { echo "No @playwright/test version found in package.json"; exit 1; }
          echo "version=$version" >> "$GITHUB_OUTPUT"

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Pre-commit github action
      uses: pre-commit/action@v3.0.1
      with:
        extra_args: "detect-secrets --all-files"

    - name: SAM Validate
      run: sam validate --region eu-west-2 -t deploy/template.yaml --lint

  run-premerge-checks:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: resolve-test-versions
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Cache Playwright
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ needs['resolve-test-versions'].outputs.playwright-version }}

      - name: Setup Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: yarn playwright install chromium --with-deps

      - name: Setup Playwright dependencies
        run: yarn playwright install-deps chromium
        if: steps.playwright-cache.outputs.cache-hit == 'true'

      - name: Build assets
        run: yarn build

      - name: Run lint
        run: yarn lint

      - name: Run test and write coverage
        run: yarn test:coverage

      - name: Run browser tests
        run: yarn test:browser:ci
        env:
          BROWSER: chrome-headless

      - name: Run sonarcloud scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Get test results history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Cucumber HTML Report action
        uses: PavanMudigonda/html-reporter-github-pages@v1.1
        id: test-report
        if: always()
        with:
          test_results: reports
          gh_pages: gh-pages
          results_history: results-history

      - name: Publish Github Pages
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: results-history
          keep_files: true
